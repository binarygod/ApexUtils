const menuTemplate='<div class="PrUnTools_Menu_Wrap" id="PrUnTools_Menu"></div>',menuItemTemplate='<div class="PrUnTools_Menu_Item {{:class}}" title="{{:tooltip}}">\n            <span class="PrUnTools_Menu_Item_Label" id="{{:id}}">{{:text}}</span>\n            <div class="PrUnTools_Menu_Item_Indicator"></div>\n        </div>',bufferTemplate='<div class="PrUnTools_TileFrame">\n            <div class="PrUnTools_TileFrame_Header">\n                <div class="PrUnTools_TileFrame_Title">{{:title}}</div>\n                <div class="PrUnTools_TileFrame_SubTitle">{{:subtitle}}</div>\n            </div>\n            <div class="PrUnTools_TileFrame_Body">\n                <div class="PrUnTools_TileFrame_Anchor">\n                    <div style="position: relative; overflow: hidden; width: 100%; height: 100%;">\n                        <div style="position: absolute; top: 0px; left: 0px; right: 0px; bottom: 0px; overflow: scroll; margin-right: -17px; margin-bottom: -17px;">\n                            {{:content}}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>',alertTemplate='\n        <div class="PrUnTools_Alert_Overlay alert-{{:color}}">\n            <div class="PrUnTools_Alert_Content">\n                <span class="PrUnTools_Alert_Title">\n                    <span>{{:alert_title}}</span>\n                </span>\n                <span class="PrUnTools_Alert_Content">\n                    <div>\n                        <span>{{:alert_message}}</span>\n                    </div>\n                </span>\n            </div>\n        </div>\n    ';class ApexUtils{constructor(){this._screenChangeDelay=750}load(e=""){$("BODY").hasClass("PrUnTools")?$("HEAD").append($("<STYLE>").html(e)):($("BODY").addClass("PrUnTools"),$("HEAD").append($("<LINK>").attr("href","https://cdn.jsdelivr.net/gh/binarygod/apexutils/styles.css").attr("rel","stylesheet")),setTimeout(()=>{$('[class^="Frame__sidebar"] DIV[class^="Frame__toggle__"]:last').after($(menuTemplate)),document.dispatchEvent(new Event("PrUnTools_ScreenChanged")),$("body").on("DOMSubtreeModified",'SPAN[class^="HeadItem__label"]',()=>{setTimeout(()=>{document.dispatchEvent(new Event("PrUnTools_ScreenChanged"))},this._screenChangeDelay)}),document.dispatchEvent(new Event("PrUnTools_Loaded"))},5e3))}get screenChangeDelay(){return this._screenChangeDelay}set screenChangeDelay(e){this._screenChangeDelay=e}addMenuItem(e,t,s="",n,l="",a=!1,o="#PrUnTools_Menu"){a&&(l+="PrUnTools_Disabled");let i=menuItemTemplate.replace("{{:id}}",e).replace("{{:text}}",t).replace("{{:tooltip}}",s).replace("{{:class}}",l),r=$(i);$(o).append($(r)),void 0!==n&&$(r).click(n)}get menuAnchor(){return'[class^="Frame__sidebar"]'}showBuffer(e,t,s,n,l){$('[class^="Dock__create__"]').click();let a=$('DIV[class^="Window__window___"]:not(".PrUnTools_taken") DIV[class^="Tile__selector__"]:first').parent().parent().parent().addClass("PrUnTools_taken");$(a).find('DIV[class^="Tile__selector__"]').remove(),$(a).find('DIV[class^="Tile__controls__"]').remove(),$(a).find('SPAN[class^="Window__close__"]').remove();let o=bufferTemplate.replace("{{:title}}",e).replace("{{:subtitle}}",t).replace("{{:content}}",l);$(a).find('DIV[class^="Window__body__"]').attr("style","position: relative; user-select: auto; width: "+s+"px; height: "+n+"px; box-sizing: border-box;"),$(a).find('DIV[class^="Tile__tile__"]').append($(o))}showAlertBuffer(e,t,s,n,l,a,o="yellow"){$('[class^="Dock__create__"]').click();let i=$('DIV[class^="Window__window___"]:not(".PrUnTools_taken") DIV[class^="Tile__selector__"]:first').parent().parent().parent().addClass("PrUnTools_taken");$(i).find('DIV[class^="Tile__selector__"]').remove(),$(i).find('DIV[class^="Tile__controls__"]').remove(),$(i).find('SPAN[class^="Window__close__"]').remove();let r=alertTemplate.replace("{{:alert_title}}",s).replace("{{:alert_message}}",n).replace("{{:color}}",o),c=bufferTemplate.replace("{{:title}}",e).replace("{{:subtitle}}",t).replace("{{:content}}",r);$(i).find('DIV[class^="Window__body__"]').attr("style","position: relative; user-select: auto; width: "+l+"px; height: "+a+"px; box-sizing: border-box;"),$(i).find('DIV[class^="Tile__tile__"]').append($(c))}help(){return"<div style=\"padding: 0 20px;\">\n                <h2>Welcome to ApexUtils</h2>\n                <h3>What is ApexUtils</h3>\n                <p>PrUnTools started as a private set of tools that I wrote with another member of the community. I then \n                noticed that I could seperate the Apex code in to it's own reusable library which resulted in ApexUtils.  This would allow me to keep\n                 my tools and provide a framework for others to use to create their own.</p>\n                <p>ApexUtils is a set of utility functions designed to be used by TamperMonkey scripts (or similar products) \n                 to interact with the APEX interface in a safe way.  The utility also loads CSS that mimics the style of\n                  APEX but with class names you can use in your own HTML.</p>\n                <h3>What ApexUtils is NOT</h3>\n                <p>ApexUtils is NOT a framework for creating Bots.  It performs only one automatic click to create a \n                new buffer window.  I have personally showed this feature to the Devs and they are ok with it.  <strong>You</strong> are\n                 responsible for what  you create with the tool.</p>\n                <h3>Is this against ToS</h3>\n                <p>No. ApexUtils itself only reads and adds content to the Client.  It does not send data to the server or\n                automate client tasks.  ApexUtils interfaces with the DOM elements of the page and does not attempt to \n                interact with the Javascript in the page, all modifications are done using it's own Javascript utilizing \n                jQuery.</p>\n                <h3>What can I use ApexUtils for</h3>\n                <p>ApexUtils can be used to make anything that would be useful on the client.  For example the included FMAP \n                utility used to show the Flat Map of the universe.</p>\n                <h3>Resources</h3>\n                <ul>\n                    <li>GitHub</li>\n                </ul>\n            </div>"}}const apex=new ApexUtils;Object.freeze(apex);